#!/usr/bin/env bash

#
# version
#
fuse_version_major=2
fuse_version_minor=9.4
s3fs_version=1.78

fuse_archive_filename=fuse-${fuse_version_major}.${fuse_version_minor}.tar.gz
fuse_download_url=http://www.sourceforge.net/projects/fuse/files/fuse-${fuse_version_major}.X/${fuse_version_major}.${fuse_version_minor}/${fuse_archive_filename}

s3fs_archive_filename=s3fs-fuse-${s3fs_version}.tar.gz
s3fs_download_url=https://codeload.github.com/s3fs-fuse/s3fs-fuse/tar.gz/v${s3fs_version}

#
# path and env
#
build_dir=$1
cache_dir=$2
env_dir=$3
bp_dir=$(cd $(dirname $0); cd ..; pwd)

echo "Build dir: " $build_dir
echo "Cache dir: " $cache_dir

export_env_dir() {
  env_dir=$1
  whitelist_regex=${2:-''}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

#
# main
#
export_env_dir $env_dir
rm -rvf $build_dir/s3fs/s3_built
if [ ! -f "$build_dir/s3fs/s3_built" ]; then

	#
	# download
	#
	rm -rf /tmp/fuse/
	mkdir -p /tmp/fuse/
	curl -s ${fuse_download_url} -o /tmp/fuse/${fuse_archive_filename}
	tar -xvf /tmp/fuse/${fuse_archive_filename} -C /tmp/fuse

	rm -rf /tmp/s3fs/
	mkdir -p /tmp/s3fs/
	curl -s ${s3fs_download_url} -o /tmp/s3fs/${s3fs_archive_filename}
	tar -xvf /tmp/s3fs/${s3fs_archive_filename} -C /tmp/s3fs

	#
	# compile
	#
	export PREFIX=$build_dir/s3fs
	export PKG_CONFIG_PATH=$build_dir/s3fs/usr/local/lib/pkgconfig
	export CFLAGS=-I$build_dir/s3fs/usr/local/include

	export LD_LIBRARY_PATH=$build_dir/s3fs/lib:$build_dir/s3fs/usr/local/lib:$build_dir/s3fs/usr/lib:$LD_LIBRARY_PATH
	export LD_RUN_PATH=$build_dir/s3fs/lib:$build_dir/s3fs/usr/lib:$LD_RUN_PATH
	export PATH=$build_dir/s3fs/bin:$build_dir/s3fs/usr/bin:$build_dir/s3fs/usr/sbin:$build_dir/s3fs/usr/local/sbin:$build_dir/s3fs/usr/local/bin:$PATH

	export CFLAGS=-I$build_dir/s3fs/usr/local/include
	export CXXFLAGS=-I$build_dir/s3fs/usr/local/include
	export LDFLAGS=-L$build_dir/s3fs/usr/local/lib

	mkdir -pv $build_dir/s3fs
	cd /tmp/fuse/fuse-${fuse_version_major}.${fuse_version_minor} && ./configure --disable-kernel-module && make -j 2 && make DESTDIR=$build_dir/s3fs install
	cd /tmp/s3fs/s3fs-fuse-${s3fs_version} && ./autogen.sh && ./configure  && make -j 2 && make DESTDIR=$build_dir/s3fs install

	touch $build_dir/s3fs/s3_built
fi

# Create Mount point
if [ ! -f ~/$S3FS_AWS_MOUNT_POINT ]; then
    mkdir -pv ~/$S3FS_AWS_MOUNT_POINT
fi

#
# Runtime & Multi-buildpack exports
#
echo "Creating runtime environment"
mkdir -p $build_dir/.profile.d
echo "export S3_CMD=\$HOME/s3fs/usr/local/bin/s3fs" > $build_dir/.profile.d/s3fs.sh
echo "export LD_LIBRARY_PATH=\$HOME/s3fs/lib:\$HOME/s3fs/usr/local/lib:\$HOME/s3fs/usr/lib:\$LD_LIBRARY_PATH" >> $build_dir/.profile.d/s3fs.sh
echo "export PATH=\$HOME/s3fs/bin:\$HOME/s3fs/usr/bin:\$HOME/s3fs/usr/sbin:\$HOME/s3fs/usr/local/sbin:\$HOME/s3fs/usr/local/bin:\$PATH" >> $build_dir/.profile.d/s3fs.sh

# Mount with .profile.d script which is running as root (will it change in the future?)
cat >> $build_dir/.profile.d/s3fs.sh << EOF
echo \${S3FS_AWS_ACCESS_KEY_ID:=\$AWS_ACCESS_KEY_ID}:\${S3FS_AWS_SECRET_ACCESS_KEY:=\$AWS_SECRET_ACCESS_KEY} > .passwd-s3fs
chmod 600 .passwd-s3fs

# Create directories
if [ ! -d "\${S3FS_AWS_MOUNT_POINT}" ]; then
  mkdir -p \${S3FS_AWS_MOUNT_POINT}
  chmod 777 \${S3FS_AWS_MOUNT_POINT}
fi

if [ ! -d "\${S3FS_CACHE_DIR:="/tmp/s3fs"}" ]; then
  mkdir -p \${S3FS_CACHE_DIR}
fi

# Options
echo "Mounting with options " \${S3FS_MOUNT_OPTIONS:="-o allow_other -o use_cache=\${S3FS_CACHE_DIR}"}

# Mount
echo "Executing: " \${S3_CMD}  \${S3FS_AWS_S3_BUCKET_NAME:=\$AWS_S3_BUCKET_NAME} \$S3FS_AWS_MOUNT_POINT \${S3FS_MOUNT_OPTIONS}
\${S3_CMD} -o allow_other \${S3FS_AWS_S3_BUCKET_NAME:=\$AWS_S3_BUCKET_NAME} \$S3FS_AWS_MOUNT_POINT \${S3FS_MOUNT_OPTIONS}
echo "s3fs exited with " \$?
EOF

exit 0
